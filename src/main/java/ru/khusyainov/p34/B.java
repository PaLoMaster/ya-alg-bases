package ru.khusyainov.p34;

/**
 * Ханойские башни 2.
 * <p>
 * Головоломка "Ханойские башни" состоит из трёх стержней, пронумеруем их слева направо: 1, 2 и 3.
 * Также в головоломке используется стопка дисков с отверстием посередине. Радиус дисков уменьшается снизу вверх.
 * Изначально диски расположены на левом стержне (стержень 1), самый большой диск находится внизу.
 * Диски в игре перемещаются по одному со стержня на стержень. Диск можно надеть на стержень,
 * только если он пустой или верхний диск на нём большего размера, чем перемещаемый.
 * Цель головоломки — перенести все диски со стержня 1 на стержень 3.
 * <p>
 * Немного изменим правила. Теперь головоломка состоит из четырех стержней, а цель головоломки — перенести все
 * диски со стержня 1 на стержень 4. Найдите минимальное количество ходов, за которое можно решить головоломку.
 * <ul>
 * <li>стандартный ввод или input.txt: в первой строке задано одно число n (3 ≤ n ≤ 10) —
 * количество дисков на первой башне;</li>
 * <li>стандартный вывод или output.txt: одно число.</li>
 * </ul>
 */
public class B extends TowersOfHanoi {
    public String solve(int disksCount) {
        return String.valueOf(solution(disksCount, 4));
    }

    private int solution(int disksCount, int pegsCount) {
        if (disksCount == 1) {
            return 1;
        }
        int part = disksCount - (int) Math.round(Math.sqrt(2 * disksCount + 1)) + 1;
        if (pegsCount == 3) { // https://t.me/handbook_algorithms/6/1724, https://dl.acm.org/doi/pdf/10.1145/126459.126460
            return (int) Math.pow(2, disksCount) - 1;
        }
        return 2 * solution(part, pegsCount) + solution(disksCount - part, pegsCount - 1);
    }
}
